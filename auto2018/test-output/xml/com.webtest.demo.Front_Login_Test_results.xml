<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="test1"
           tests="4"
           failures="1"
           errors="0"
           skipped="3"
           time="0.130">
  <properties />
            <testcase name="doBeforeSuite" time="0.130" classname="com.webtest.demo.Front_Login_Test">
                <failure type="java.lang.IllegalStateException"
                  message="Specified firefox binary location does not exist or is not a real file: D:\Program Files\Mozilla Firefox\firefox.exe"
              >
<![CDATA[java.lang.IllegalStateException: Specified firefox binary location does not exist or is not a real file: D:\Program Files\Mozilla Firefox\firefox.exe
  com.google.common.base.Preconditions.checkState(Preconditions.java:459)
  org.openqa.selenium.firefox.internal.Executable.<init>(Executable.java:45)
  org.openqa.selenium.firefox.FirefoxBinary.<init>(FirefoxBinary.java:139)
  org.openqa.selenium.firefox.FirefoxOptions$Binary.asBinary(FirefoxOptions.java:442)
  java.util.Optional.map(Optional.java:215)
  org.openqa.selenium.firefox.FirefoxOptions.getBinaryOrNull(FirefoxOptions.java:221)
  org.openqa.selenium.firefox.FirefoxOptions.getBinary(FirefoxOptions.java:217)
  org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:147)
  org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:120)
  org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
  com.webtest.core.BaseTest.newWebDriver(BaseTest.java:49)
  com.webtest.core.BaseTest.doBeforeSuite(BaseTest.java:76)
  sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  java.lang.reflect.Method.invoke(Method.java:498)
  org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
  org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
  org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
  org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
  org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
  org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
  org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
  org.testng.TestRunner.privateRun(TestRunner.java:648)
  org.testng.TestRunner.run(TestRunner.java:505)
  org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
  org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
  org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
  org.testng.SuiteRunner.run(SuiteRunner.java:364)
  org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
  org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
  org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
  org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
  org.testng.TestNG.runSuites(TestNG.java:1049)
  org.testng.TestNG.run(TestNG.java:1017)
  org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
  org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
  org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
      </failure>

          </testcase>
  
            <testcase name="doAfterMethod" time="0.0" classname="com.webtest.demo.Front_Login_Test">
          <skipped />
    </testcase>
            <testcase name="setup" time="0.0" classname="com.webtest.demo.Front_Login_Test">
          <skipped />
    </testcase>
            <testcase name="testLogin" time="0.0" classname="com.webtest.demo.Front_Login_Test">
          <skipped />
    </testcase>
  
  
</testsuite>
